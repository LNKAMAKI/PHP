fstperc = Math.abs(conts[contnumber/3 + i - 1].ys[0] - advances[0][timers[0].ind].sty[contnumber/3 + i - 1])
                    secperc = Math.abs(conts[contnumber/3 + i - 1].ysfinal[0] - advances[0][timers[0].ind].sty[contnumber/3 + i - 1])
                    finalperc = fstperc/secperc

                        if (i == 3) {
                            //console.log(contnumber/3 + i - 1,':', advances[0][timers[0].ind].sty[contnumber/3 + i - 1], '=>',conts[contnumber/3 + i - 1].ysfinal[0])
                        //console.log(conts[contnumber/3 + i - 1].ys[0])
                        //console.log('has moved: ',fstperc)
                        ////console.log('still remains: ',secperc)
                        //console.log('final percento:',finalperc)
                        }
                if (conts[contnumber/3 + i - 1].running[0] == true && finalperc >= 0.5 && conts[contnumber/3 + i].ys[0] == -100) {
                        //if (i == 2 || i == 3) {
                            //console.log('hey yyou',contnumber/3 + i,hiro,advances[0][timers[0].ind].sty[contnumber/3 + i])
                            y = 0
                            
                            conts[contnumber/3 + i].ys[0] = advances[0][timers[0].ind].sty[contnumber/3 + i]
                            conts[contnumber/3 + i].time[0] = hiro
                            conts[contnumber/3 + i].running[0] = true
                            //console.log(contnumber/3 + i,':',conts[contnumber/3 + i].running[0])
                            if (i == contnumber/3 - 1) {
                            //console.log('add timers2')
                            
                            if (fixo == false) {
                              addTimers(timers2,0,advances[0][timers[current].ind].amp[(contnumber/3)],direct[current],(contnumber/3))
                            }else{
                                if (direct[current] == 'u') {
                                    addTimers(timers2,0,advances[0][timers[current].ind].amp[(contnumber/3)],'d',(contnumber/3))
                                }else{
                                    addTimers(timers2,0,advances[0][timers[current].ind].amp[(contnumber/3)],'u',(contnumber/3))
                                }
                            }
                                //addTimers(timers2,0,advances[0][timers[current].ind].amp[20],'u',0)
                            }
                            
                       // }
                }else if (conts[contnumber/3 + i - 1].running[0] == true && finalperc >= 0.5) {//(((conts[contnumber/3 + i - 1].ys[0])).toFixed(3) == ((conts[contnumber/3 + i - 1].ysfinal[0])).toFixed(3)){
                    if (i == 3) {
                    //console.log('pode atualizar',conts[23].time[0],y)
                    }
                   // console.log('sim')
                    conts[contnumber/3 + i].ys[0] = conts[contnumber/3 + i].y
                }else{
                    conts[contnumber/3 + i].ys[0] = -100
                    //if (i == 3) {
                        conts[contnumber/3 + i].time[0] = 0
               //}